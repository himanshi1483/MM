
@model Mahamesh.Models.ApplicantRegistration
@using Mahamesh.Models

@{
    /**/

    ViewBag.Title = "Edit";
}

<style>
    .border {
        border: 2px solid #d2f1d6;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }

    #img-upload {
        width: 20%;
        height: 20%;
    }

    #regForm {
        background-color: #ffffff;
        /*margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;*/
        min-width: 300px;
    }


    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }


    /*#prevBtn {
        background-color: #bbbbbb;
    }*/

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #4CAF50;
        }

    .form-group {
        padding-right: 15px;
        margin-bottom: 5px;
        padding-bottom: 10px;
    }
</style>
<div class="container" style="margin-bottom:150px;">
    <div class="headerDashboard">
        <div class="col-lg-11 col-md-11 col-sm-11 col-xs-11 headerText">
            <h2>राजे यशवंतराव होळकर महामेष योजना</h2>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-1 col-xs-1" style="text-align:right">
            <img src="~/Images/Raje.jpg" class="img-responsive" alt="Raje Yashwant Holkar" />
        </div>

    </div>
    <div class="panel panel-primary-2">
        <div class="panel-heading panel-primary-2 text-center"><h5>अर्जदारांनी करावयाच्या अर्ज</h5></div>
        <div class="panel-body">
            @using (Html.BeginForm("Edit", "ApplicantRegistrations", FormMethod.Post, new { @id = "editForm", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="col-lg-8">
                    <div class="col-lg-6 text-right" id="tabBtn">
                        <div style="text-align:right;display:none">
                            <span class="step"></span>
                            <span class="step"></span>
                            <span class="step"></span>

                        </div>
                    </div>
                </div>
                <div>
                    <div style="float:right;">
                        <button type="button" class="btn btn-danger" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                        @*<button type="submit" class="btn btn-default" id="saveBtn" onclick="nextPrev(1)">Save</button>*@
                        <button type="button" class="btn btn-success" id="nextBtn" onclick="nextPrev(1)">Next</button>
                    </div>
                </div>
                <!-- One "tab" for each step in the form: -->
                <div class="tab">
                    <div class="col-lg-6">
                        <div class="alert">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label>Upload Image</label>
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <span class="btn btn-default btn-file">
                                        Browse… <input type="file" id="imgInp" name="file" accept='image/x-png,image/jpg,image/jpeg' required>
                                    </span>
                                </span>
                                <input type="text" class="form-control pht" id="Photo" readonly required>



                            </div>
                            <p style="color:lightcoral;margin-top:10px" id="photoErr"></p>
                            <p style="color:forestgreen;margin-top:10px">Only JPEG, JPG and PNG file are allowed.</p>
                            <img id='img-upload' src="@Model.Photo" />
                        </div>
                    </div>
                    @*<div class="col-lg-4">
                            <img src="@Model.Photo" alt="Applicant Image" class="img-responsive" />
                        </div>*@
                    <div class="col-lg-12 heading panel-primary-2 text-center" style="margin-bottom:10px;">
                        <h5>पत्रव्यवहाराचा पत्ता</h5>
                    </div>

                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.ApName)
                            <div>
                                @Html.EditorFor(model => model.ApName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ApName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Dist, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.Dist, (SelectList)ViewBag.District, new { @class = "form-control", @required = "required" })

                                @Html.ValidationMessageFor(model => model.Dist, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="col-lg-12">


                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Tahashil, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.Tahashil, (SelectList)ViewBag.Taluka, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Tahashil, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group  col-lg-6">
                            @Html.LabelFor(model => model.VillageName)
                            <div>
                                @Html.DropDownListFor(model => model.VillageName, (SelectList)ViewBag.Village, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.VillageName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control", @type = "number", onfocusout = "checkPin()" } })
                                @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.HVillage, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.HVillage, (SelectList)ViewBag.HVilage, new { @class = "form-control", @required = "required" })
                                @Html.ValidationMessageFor(model => model.HVillage, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.PhNo, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.PhNo, new { htmlAttributes = new { @class = "form-control", @type = "number", @onfocusout = "check()" } })
                                @Html.ValidationMessageFor(model => model.PhNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*<input type="date" data-date="20/08/2019" class="form-control" data-date-format="DD/MM/YYYY">*@
                                @*<div>
                                        Date: <input type="text" id="DOB" />
                                    </div>*@
                                @*<div id="datepicker"></div>*@

                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group  col-lg-6">
                            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            <div>

                                <label class="radio-inline"><input type="radio" style="position:relative !important" name="gender" value="पुरुष">पुरुष</label>

                                <label class="radio-inline"><input type="radio" style="position:relative !important" name="gender" value="स्त्री">स्त्री</label>

                                <label class="radio-inline"><input type="radio" style="position:relative !important" name="gender" value="इतर">इतर</label>

                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.ChildCount, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*@Html.EditorFor(model => model.ChildCount, new { htmlAttributes = new { @class = "form-control" } })*@
                                <select class="form-control" id="ChildCount" required>
                                    <option value="-1">Select</option>
                                    <option value="0">0</option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>

                                </select>
                                @Html.ValidationMessageFor(model => model.ChildCount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group  col-lg-6">
                            @Html.LabelFor(model => model.Child2006, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @*@Html.EditorFor(model => model.Child2006, new { htmlAttributes = new { @class = "form-control" } })*@
                                <select class="form-control" id="Child2006" required>
                                    <option value="-1">Select</option>
                                    <option value="0">0</option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>

                                </select>
                                @Html.ValidationMessageFor(model => model.Child2006, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.Caste, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Caste, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Caste, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.SubCatse, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.SubCatse, (SelectList)ViewBag.Caste, new { @class = "form-control",  @required = "required" })
                                @Html.ValidationMessageFor(model => model.SubCatse, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">


                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.RationCardNumber, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.RationCardNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RationCardNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.AdharCardNo, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.AdharCardNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AdharCardNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.ApplicantCrippled, htmlAttributes: new { @class = "control-label" })
                            <div>

                                @*<label class="radio-inline"><input type="radio" style="position:relative !important" name="gender" value="होय">पुरुष</label>

                                    <label class="radio-inline"><input type="radio" style="position:relative !important" name="gender" value="नाही">स्त्री</label>*@

                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" onclick="javascript:checkCripple();" class="custom-control-input" id="ApplicantCrippled1" name="ApplicantCrippled" value="होय">
                                    <label class="custom-control-label" for="ApplicantCrippled1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkCripple();" id="ApplicantCrippled2" name="ApplicantCrippled" value="नाही">
                                    <label class="custom-control-label" for="ApplicantCrippled2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.ApplicantCrippled, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6" style="display:none" id="divCripple">
                            @Html.LabelFor(model => model.CrippledPercentage, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.CrippledPercentage, (SelectList)ViewBag.Percentage, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CrippledPercentage, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.PresentDaySheep, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkSheep();" id="PresentDaySheep1" name="PresentDaySheep" value="होय">
                                    <label class="custom-control-label" for="PresentDaySheep1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkSheep();" id="PresentDaySheep2" name="PresentDaySheep" value="नाही">
                                    <label class="custom-control-label" for="PresentDaySheep2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.PresentDaySheep, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6" id="divSheep" style="display:none">
                            @Html.LabelFor(model => model.NumberOfSheepIs, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.NumberOfSheepIs, (SelectList)ViewBag.Sheep, new { @class = "form-control", @Value = "0" })
                                @Html.ValidationMessageFor(model => model.NumberOfSheepIs, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">

                            <div class="custom-control custom-radio custom-control-inline">
                                <input type="radio" class="custom-control-input" id="ApplicantsPermanentInOnePlace" name="ApplicantsPermanentInOnePlace" value="होय">
                                @Html.LabelFor(model => model.ApplicantsPermanentInOnePlace, htmlAttributes: new { @class = "custom-control-label", @for = "ApplicantsPermanentInOnePlace" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            <div class="custom-control custom-radio custom-control-inline">
                                <input type="radio" class="custom-control-input" id="ApplicantsMigratedByWayOfTransit" name="ApplicantsPermanentInOnePlace" value="नाही">
                                @Html.LabelFor(model => model.ApplicantsMigratedByWayOfTransit, htmlAttributes: new { @class = "custom-control-label", @for = "ApplicantsMigratedByWayOfTransit" })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.IsApplicantOwnedLand, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkLandOwned();" id="IsApplicantOwnedLand1" name="IsApplicantOwnedLand" value="होय">
                                    <label class="custom-control-label" for="IsApplicantOwnedLand1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkLandOwned();" id="IsApplicantOwnedLand2" name="IsApplicantOwnedLand" value="नाही">
                                    <label class="custom-control-label" for="IsApplicantOwnedLand2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsApplicantOwnedLand, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6" id="divLease" style="display:none">
                            @Html.LabelFor(model => model.IsNotIsAvailableOnLease, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkLandLeased();" id="IsNotIsAvailableOnLease1" name="IsNotIsAvailableOnLease" value="होय">
                                    <label class="custom-control-label" for="IsNotIsAvailableOnLease1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" onclick="javascript:checkLandLeased();" class="custom-control-input" id="IsNotIsAvailableOnLease2" name="IsNotIsAvailableOnLease" value="नाही">
                                    <label class="custom-control-label" for="IsNotIsAvailableOnLease2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsNotIsAvailableOnLease, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-lg-12" id="divLandOwned" style="display:none">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.YesApplicantOwnedLandEcre, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.YesApplicantOwnedLandEcre, (SelectList)ViewBag.AcreOwned, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.YesApplicantOwnedLandEcre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.YesApplicantOwnedLandGuntha, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.YesApplicantOwnedLandGuntha, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                                @Html.ValidationMessageFor(model => model.YesApplicantOwnedLandGuntha, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-12" id="divLandLeased" style="display:none">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.YesAvailableOnLeaseEcre, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.YesAvailableOnLeaseEcre, (SelectList)ViewBag.AcreLeased, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.YesAvailableOnLeaseEcre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.YesAvailableOnLeaseGuntha, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.YesAvailableOnLeaseGuntha, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                                @Html.ValidationMessageFor(model => model.YesAvailableOnLeaseGuntha, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-lg-12 text-center alert alert-warning">Page 1 of 3</div>
                </div>
                <div class="tab">
                    <div class="col-lg-12">
                        <div class="alert">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                    </div>
                    <div class="col-lg-12 heading-green heading-line text-center" style="margin-bottom:20px">
                        <h5>Land Detail: (number must be in English)</h5>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.GardeningEcre, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.GardeningEcre, (SelectList)ViewBag.GardenAcre, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.GardeningEcre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.CuminEcre, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.CuminEcre, (SelectList)ViewBag.CuminAcre, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CuminEcre, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.WaterSource, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.WaterSource, (SelectList)ViewBag.WaterSource, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.WaterSource, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.DurationOfWater, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.DurationOfWater, (SelectList)ViewBag.Duration, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DurationOfWater, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.LastYearFooder, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.LastYearFooder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastYearFooder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.LastYearTotalProductionInKG, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.LastYearTotalProductionInKG, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastYearTotalProductionInKG, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.IsWarehouseForSheep, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" onclick="javascript:checkWarehouse();" class="custom-control-input" id="IsWarehouseForSheep1" name="IsWarehouseForSheep" value="होय">
                                    <label class="custom-control-label" for="IsWarehouseForSheep1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" onclick="javascript:checkWarehouse();" class="custom-control-input" id="IsWarehouseForSheep2" name="IsWarehouseForSheep" value="नाही">
                                    <label class="custom-control-label" for="IsWarehouseForSheep2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsWarehouseForSheep, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6" id="divSpace" style="display:none">
                            @Html.LabelFor(model => model.IsNotIsAtLeastOnePinpointSpace, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" id="IsNotIsAtLeastOnePinpointSpace1" name="IsNotIsAtLeastOnePinpointSpace" value="होय">
                                    <label class="custom-control-label" for="IsNotIsAtLeastOnePinpointSpace1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" id="IsNotIsAtLeastOnePinpointSpace2" name="IsNotIsAtLeastOnePinpointSpace" value="नाही">
                                    <label class="custom-control-label" for="IsNotIsAtLeastOnePinpointSpace2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsNotIsAtLeastOnePinpointSpace, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12" id="divWarehouse" style="display:none">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.YesIntekOfSheepInWarehouse, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.YesIntekOfSheepInWarehouse, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.YesIntekOfSheepInWarehouse, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.TypeExistingCastle, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.TypeExistingCastle, (SelectList)ViewBag.TypeCastle, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TypeExistingCastle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-4">
                            @Html.LabelFor(model => model.IsSavingsGroupMember, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkSavings();" id="IsSavingsGroupMember1" name="IsSavingsGroupMember" value="होय">
                                    <label class="custom-control-label" for="IsSavingsGroupMember1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkSavings();" id="IsSavingsGroupMember2" name="IsSavingsGroupMember" value="नाही">
                                    <label class="custom-control-label" for="IsSavingsGroupMember2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsSavingsGroupMember, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-lg-12" id="divSavings" style="display:none">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.SavingGroupName, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.SavingGroupName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SavingGroupName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.SavingGroupRegNumber, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.SavingGroupRegNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SavingGroupRegNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.IsanimalHusbandryManufacturingCompanyMember, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkCompany();" id="IsanimalHusbandryManufacturingCompanyMember1" name="IsanimalHusbandryManufacturingCompanyMember" value="होय">
                                    <label class="custom-control-label" for="IsanimalHusbandryManufacturingCompanyMember1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" onclick="javascript:checkCompany();" id="IsanimalHusbandryManufacturingCompanyMember2" name="IsanimalHusbandryManufacturingCompanyMember" value="नाही">
                                    <label class="custom-control-label" for="IsanimalHusbandryManufacturingCompanyMember2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsanimalHusbandryManufacturingCompanyMember, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12" id="divCompany" style="display:none">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.IsanimalHusbandryManufacturingCompanyName, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.IsanimalHusbandryManufacturingCompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsanimalHusbandryManufacturingCompanyName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.IsanimalHusbandryManufacturingCompanyRegNumber, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.IsanimalHusbandryManufacturingCompanyRegNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsanimalHusbandryManufacturingCompanyRegNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group col-lg-6">
                            @Html.LabelFor(model => model.IsTrained, htmlAttributes: new { @class = "control-label" })
                            <div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" id="IsTrained1" name="IsTrained" value="होय">
                                    <label class="custom-control-label" for="IsTrained1">होय</label>
                                </div>
                                <div class="custom-control custom-radio custom-control-inline">
                                    <input type="radio" class="custom-control-input" id="IsTrained2" name="IsTrained" value="नाही">
                                    <label class="custom-control-label" for="IsTrained2">
                                        नाही
                                    </label>
                                </div>
                                @Html.ValidationMessageFor(model => model.IsTrained, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 text-center alert alert-warning">Page 2 of 3</div>
                </div>

                <div class="tab" id="tab3">
                    @Html.HiddenFor(x => x.AdharCardNo)
                    <div class="col-lg-6">
                        <div class="alert">@Html.ValidationSummary(true, "", new { @class = "text-danger" })</div>
                    </div>
                    <div class="col-lg-12 text-center">
                        <h3>अर्जदारास योजनेमधील कोणत्या घटकाखाली लाभ घ्यावयाचा आहे</h3>
                        <h5>महत्वाची सूचना – या योजनेअंतर्गत खालील १५ उपघटकामध्ये लाभ घेता येईल. तथापि</h5>
                    </div>
                    @*<input type="hidden" id="CompNumber" name="CompNumberList" value="1" />*@
                    <table class="table table-responsive table-condensed table-bordered">
                        <tr style="background:#2a88cf;height:40px;color:white;font-weight:700;font-size:15px;text-align:center"><td colspan="3">  १. अर्जदाराने खालील पहिल्या दोन उपघटकामधील कोणत्याही एका उपघटकाचा लाभ घेतल्यास त्यांना इतर उपघटकांमध्ये लाभ घेता येणार नाही.</td></tr>

                        <tr style="border-top:2px dotted orange;border-left:2px dotted orange;border-right:2px dotted orange;">
                            <td width="2%">
                                <input type="checkbox" class="form-check-input" id="CompNumber1" name="CompNumberList1" value="1">
                                @*<input type="hidden" id="CompNumber1" name="CompNumberList" value="1" />*@
                            </td>
                            <td width="2%">1</td>
                            <td width="96%">@Components.Comp1.GetDescription()</td>
                        </tr>
                        <tr style="border-bottom:2px dotted orange;border-left:2px dotted orange;border-right:2px dotted orange;">
                            <td>
                                <input type="checkbox" class="form-check-input" id="CompNumber2" name="CompNumberList1" value="2">
                                @*<input type="hidden" id="CompNumber2" name="CompNumberList" value="2" />*@
                            </td>
                            <td>2</td>
                            <td>@Components.Comp2.GetDescription()</td>
                        </tr>
                        <tr style="background:#2a88cf;height:35px;color:white;font-weight:700;font-size:15px;text-align:center">
                            <td colspan="3">   २. अर्जदाराने खालील ३ ते ७ या उपघटकांमधील कोणत्याही एका उपघटकाचा लाभ घेतल्यास त्यांना पहिले २ उपघटक वगळता उर्वरित उपघटकांमधील मेंढीपालन व्यवसाय करण्याच्या प्रकारानुसार (स्थायी किंवा स्थलांतरित) व सध्या असलेल्या मेंढ्यांच्या संख्येनुसार खालीलप्रमाणे दर्शविण्यात आलेल्या उपघटक क्रमांक ८ ते ११ मधील कोणत्याही एका उपघटकाचा लाभ घेता येईल, तसेच १२ व १३ मधील कोणत्याही एका उपघटकाचा लाभ घेता येईल.</td>
                        </tr>
                        <tr style="border-top:2px dotted blue;border-left:2px dotted blue;border-right:2px dotted blue;">
                            <td>
                                <input type="checkbox" class="form-check-input" id="CompNumber3" name="CompNumberList2" value="3">
                                @*<input type="hidden" id="CompNumber3" name="CompNumberList" value="3" />*@
                            </td>
                            <td>3</td>
                            <td>@Components.Comp3.GetDescription()</td>
                        </tr>
                        <tr style="border-left:2px dotted blue;border-right:2px dotted blue;">
                            <td>
                                <input type="checkbox" class="form-check-input" id="CompNumber4" name="CompNumberList2" value="4">
                                @*<input type="hidden" id="CompNumber4" name="CompNumberList" value="4" />*@
                            </td>
                            <td>4</td>
                            <td>@Components.Comp4.GetDescription()</td>
                        </tr>
                        <tr style="border-left:2px dotted blue;border-right:2px dotted blue;">
                            <td>
                                <input type="checkbox" class="form-check-input" id="CompNumber5" name="CompNumberList2" value="5">
                                @*<input type="hidden" id="CompNumber5" name="CompNumberList" value="5" />*@
                            </td>
                            <td>5</td>
                            <td>@Components.Comp5.GetDescription()</td>
                        </tr>
                        <tr style="border-left:2px dotted blue;border-right:2px dotted blue;">
                            <td>
                                <input type="checkbox" class="form-check-input" id="CompNumber6" name="CompNumberList2" value="6">
                                @*<input type="hidden" id="CompNumber6" name="CompNumberList" value="6" />*@
                            </td>
                            <td>6</td>
                            <td>@Components.Comp6.GetDescription()</td>
                        </tr>
                        <tr style="border-bottom:2px dotted blue;border-left:2px dotted blue;border-right:2px dotted blue;">
                            <td>
                                <input type="checkbox" class="form-check-input" id="CompNumber7" name="CompNumberList2" value="7">
                                @*<input type="hidden" id="CompNumber7" name="CompNumberList" value="7" />*@
                            </td>
                            <td>7</td>
                            <td>@Components.Comp7.GetDescription()</td>
                        </tr>
                        <tr style="background:#2a88cf;color:white;font-weight:700;font-size:15px;text-align:center"><td colspan="3"> </td></tr>
                        <tr style="border-top:2px dotted green;border-left:2px dotted green;border-right:2px dotted green;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber8" name="CompNumberList3" value="8"></td>
                            <td>8</td>
                            <td>@Components.Comp8.GetDescription()</td>
                        </tr>
                        <tr style="border-left:2px dotted green;border-right:2px dotted green;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber9" name="CompNumberList3" value="9"></td>
                            <td>9</td>
                            <td>@Components.Comp9.GetDescription()</td>
                        </tr>
                        <tr style="border-left:2px dotted green;border-right:2px dotted green;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber10" name="CompNumberList3" value="10"></td>
                            <td>10</td>
                            <td>@Components.Comp10.GetDescription()</td>
                        </tr>
                        <tr style="border-bottom:2px dotted green;border-left:2px dotted green;border-right:2px dotted green;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber11" name="CompNumberList3" value="11"></td>
                            <td>11</td>
                            <td>@Components.Comp11.GetDescription()</td>
                        </tr>
                        <tr style="background:#2a88cf;color:white;font-weight:700;font-size:15px;text-align:center"><td colspan="3"> </td></tr>
                        <tr style="border-top:2px dotted red;border-left:2px dotted red;border-right:2px dotted red;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber12" name="CompNumberList4" value="12"></td>
                            <td>12</td>
                            <td>@Components.Comp12.GetDescription()</td>
                        </tr>
                        <tr style="border-bottom:2px dotted red;border-left:2px dotted red;border-right:2px dotted red;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber13" name="CompNumberList4" value="13"></td>
                            <td>13</td>
                            <td>@Components.Comp13.GetDescription()</td>
                        </tr>
                        <tr style="background:#2a88cf;height:35px;color:white;font-weight:700;font-size:15px;text-align:center"><td colspan="3">  ३. उपघटक क्र. १४ व १५ या पैकी एका उपघटकांमध्ये लाभ घेता येईल. </td></tr>
                        <tr style="border-top:2px dotted orange;border-left:2px dotted orange;border-right:2px dotted orange;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber14" name="CompNumberList5" value="14"></td>
                            <td>14</td>
                            <td>@Components.Comp14.GetDescription()</td>
                        </tr>
                        <tr style="border-bottom:2px dotted orange;border-left:2px dotted orange;border-right:2px dotted orange;">
                            <td><input type="checkbox" class="form-check-input" id="CompNumber15" name="CompNumberList5" value="15"></td>
                            <td>15</td>
                            <td>@Components.Comp15.GetDescription()</td>
                        </tr>
                    </table>
                    <div class="col-lg-12 text-center alert alert-warning">Page 3 of 3</div>
                    <div>
                        <div style="float:right;">
                            <button type="button" class="btn btn-danger" id="prevBtn3" onclick="nextPrev(-1)">Previous</button>
                            @*<button type="submit" class="btn btn-default" id="saveBtn1" onclick="nextPrev(1)">Save</button>*@
                            <button type="submit" class="btn btn-success" id="nextBtn3" onclick="nextPrev(1)">Submit</button>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-lg-8">


        </div>
        <div style="overflow:auto;display:none">
            <div style="float:right;">
                <button type="button" class="btn btn-danger" id="prevBtn1" onclick="nextPrev(-1)">Previous</button>
                <button type="button" class="btn btn-success" id="nextBtn1" onclick="nextPrev(1)">Next</button>
            </div>
        </div>

    </div>
</div>
<script src="/Content/Varsity/assets/js/jquery.min.js" type="text/javascript"></script>
<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");

        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
            document.getElementById("prevBtn").className = "btn btn-danger";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
            document.getElementById("nextBtn").className = "btn btn-success";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
            document.getElementById("nextBtn").className = "btn btn-warning";
        }

        if (n == 0) {
            document.getElementById("prevBtn1").style.display = "none";
        } else {
            document.getElementById("prevBtn1").style.display = "inline";
            document.getElementById("prevBtn1").className = "btn btn-danger";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn1").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn1").innerHTML = "Next";
            document.getElementById("nextBtn1").className = "btn btn-warning";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
       
        if (currentTab >= x.length) {
            if (currentTab == 3) {
                // ... the form gets submitted:
                confirm("Editing Components is not allowed once the form is submitted.");
                //  $("#tabId").val("2");
                document.getElementById("editForm").submit();
                return false;
            }
        }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

    function validateForm() {
        //var x, y, i, valid = false;
       // document.getElementsByClassName("step")[currentTab].className += " finish";
        //// This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("required");
        z = x[currentTab].getElementsByClassName("pht");
        if (z.length > 0) {
            if (z[0].value == "") {
                // add an "invalid" class to the field:
                z[0].className += " invalid";
                // and set the current valid status to false
                $("#photoErr").text("Please upload image");
                //$("#Photo").style("background", "lightcoral");
                valid = false;
            }
        }
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false
                //$("#photoErr").text("Please upload image");
                //$("#Photo").style("background", "lightcoral");
                valid = false;
            }
        }
        //// If the valid status is true, mark the step as finished and valid:
        //if (valid) {

        //}
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }
</script>

<script type="text/javascript">
    function check() {
        // $("input[name=PhNo]").on("focusout", function (e) {
        var myval = $("#PhNo").val();

        if (myval.length < 10 || myval.length > 10) {
            alert("Value must contain 10 characters.");
            $(this).focus();
        }
        //});
    }

    function checkPin() {
        // $("input[name=PhNo]").on("focusout", function (e) {
        var myval = $("#PinCode").val();

        if (myval.length < 6 || myval.length > 6) {
            alert("Value must contain 6 characters.");
            $(this).focus();
        }
        //});
    }

    $(document).ready(function () {
        $("#Caste").val("भटक्या जमातीचा - क");

        $("#nextBtn3").click(function () {
            var val1 = [];
            $("input[name=CompNumberList1]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList1]:checked').each(function (i) {
                val1[i] = $(this).val();
            });
            // alert(val1);

            var val2 = [];
            $("input[name=CompNumberList2]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList2]:checked').each(function (i) {
                val2[i] = $(this).val();
            });
            // alert(val2);

            var val3 = [];
            $("input[name=CompNumberList3]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList3]:checked').each(function (i) {
                val3[i] = $(this).val();
            });
            // alert(val3);

            var val4 = [];
            $("input[name=CompNumberList4]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList4]:checked').each(function (i) {
                val4[i] = $(this).val();
            });
            // alert(val4);

            var val5 = [];
            $("input[name=CompNumberList5]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList5]:checked').each(function (i) {
                val5[i] = $(this).val();
            });
            //  alert(val5);
            confirm("Editing Components is not allowed once the form is submitted.");
            //$("#nextBtn3").submit();
            if (val1 == "" && val2 == "" && val3 == "" && val4 == "" && val5 == "") {
                event.preventDefault();
                alert("Please select at least one component.");
            }
        });
        $("#prevBtn3").click(function () {
            var val1 = [];
            $("input[name=CompNumberList1]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList1]:checked').each(function (i) {
                val1[i] = $(this).val();
            });
            //  alert(val1);

            var val2 = [];
            $("input[name=CompNumberList2]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList2]:checked').each(function (i) {
                val2[i] = $(this).val();
            });
            //alert(val2);

            var val3 = [];
            $("input[name=CompNumberList3]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList3]:checked').each(function (i) {
                val3[i] = $(this).val();
            });
            //  alert(val3);

            var val4 = [];
            $("input[name=CompNumberList4]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList4]:checked').each(function (i) {
                val4[i] = $(this).val();
            });
            //  alert(val4);

            var val5 = [];
            $("input[name=CompNumberList5]").removeAttr("disabled");
            $(':checkbox[name=CompNumberList5]:checked').each(function (i) {
                val5[i] = $(this).val();
            });
            //  alert(val5);
            confirm("Editing Components is not allowed once the form is submitted.");
            // $("#prevBtn3").submit();
        });



        $("#Child2006").change(function () {
            var selected = $(this).children("option:selected").val();
            var selected2 = $("#ChildCount").children("option:selected").val();
            if (selected > selected2) {
                alert("No. of Children can not be less than children born after 2001.");
                $(this).val("0");
            }
            if (selected > 2) {
                alert("You are not eligible.");
                $("#nextBtn").prop("disabled", true);
                $("#nextBtn1").prop("disabled", true);
            }
            else {
                $("#nextBtn").prop("disabled", false);
                $("#nextBtn1").prop("disabled", false);
            }
        });
        $("#Dist").change(function () {
            $("#Tahashil").empty();
            $("#VillageName").empty();
            $("#HVillage").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getTaluka")',
                dataType: 'json',
                data: { id: $("#Dist").val() },
                success: function (city) {
                    //alert(city);
                    $.each(city, function (i, city) {
                        $("#Tahashil").append('<option value="'
                            + city.Value + '">'
                            + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        });

        $('input[id$=DOB]').datepicker({
            dateFormat: 'dd/mm/yy',
            maxDate: '-18Y',
            onSelect: function (value, ui) {
                var today = new Date();
                age = today.getFullYear() - ui.selectedYear;
                $('#Age').val(age);
            },
            changeMonth: true,
            yearRange: '1959:2001',
            changeYear: true
        });

        $("#Tahashil").change(function () {
            $("#VillageName").empty();
            $("#HVillage").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getVillage")',
                dataType: 'json',
                data: { id: $("#Tahashil").val() },
                success: function (city) {

                    $.each(city, function (i, city) {
                        $("#VillageName").append('<option value="'
                                                   + city.Value + '">'
                                             + city.Text + '</option>');
                    });
                    $.each(city, function (i, city) {
                        $("#HVillage").append('<option value="'
                            + city.Value + '">'
                            + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })

        $('#CompNumber1').change(function () {
            if ($('#CompNumber1').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', true);
                $('#CompNumber9').prop('disabled', true);
                $('#CompNumber10').prop('disabled', true);
                $('#CompNumber11').prop('disabled', true);
                $('#CompNumber12').prop('disabled', true);
                $('#CompNumber13').prop('disabled', true);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked1');
            }
            else {
                console.log('unchecked1');
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber2').change(function () {
            if ($('#CompNumber2').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', true);
                $('#CompNumber9').prop('disabled', true);
                $('#CompNumber10').prop('disabled', true);
                $('#CompNumber11').prop('disabled', true);
                $('#CompNumber12').prop('disabled', true);
                $('#CompNumber13').prop('disabled', true);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked2');
            }
            else {
                console.log('unchecked2');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber3').change(function () {
            if ($('#CompNumber3').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked3');
            }
            else {
                console.log('unchecked3');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber4').change(function () {
            if ($('#CompNumber4').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked4');
            }
            else {
                console.log('unchecked4');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber5').change(function () {
            if ($('#CompNumber5').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked5');
            }
            else {
                console.log('unchecked5');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber6').change(function () {
            if ($('#CompNumber6').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked6');
            }
            else {
                console.log('unchecked6');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber7').change(function () {
            if ($('#CompNumber7').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked7');
            }
            else {
                console.log('unchecked7');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber8').change(function () {
            if ($('#CompNumber8').is(':checked') == true) {
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
                else {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
            }
            else {
                console.log('unchecked8');
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }
                else {
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber9').change(function () {
            if ($('#CompNumber9').is(':checked') == true) {
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked9');
                }
                else {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked9');
                }
            }
            else {
                console.log('unchecked9');
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    console.log('checked3-7');
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }

                else {
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber10').change(function () {
            if ($('#CompNumber10').is(':checked') == true) {
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked9');
                }
                else {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked10');
                }
            }
            else {
                console.log('unchecked10');
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    console.log('checked3-7');
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }
                else {
                    console.log('unchecked3-7');
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }

            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber11').change(function () {
            if ($('#CompNumber11').is(':checked') == true) {
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked9');
                }
                else {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked11');
                }
            }
            else {
                console.log('unchecked11');
                if (($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) {
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }
                else {
                    $('#CompNumber1').prop('disabled', false);
                    $('#CompNumber2').prop('disabled', false);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', false);
                    $('#CompNumber15').prop('disabled', false);
                }
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber12').change(function () {
            if ($('#CompNumber12').is(':checked') == true) {
                if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber13').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
                else if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && ((($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber13').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked12');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked12');
                }
            }
            else {
                if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked12');
                }
                else if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && ((($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked12');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber13').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked12');
                }
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber13').change(function () {
            if ($('#CompNumber13').is(':checked') == true) {
                if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
                else if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked8');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && ((($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked13');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', true);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked13');
                }
            }
            else {
                if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', true);
                    $('#CompNumber5').prop('disabled', true);
                    $('#CompNumber6').prop('disabled', true);
                    $('#CompNumber4').prop('disabled', true);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', true);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked13');
                }
                else if ((($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked13');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && ((($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', true);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', true);
                    $('#CompNumber9').prop('disabled', true);
                    $('#CompNumber8').prop('disabled', true);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked13');
                }
                else if (!(($('#CompNumber3').is(':checked') == true) || ($('#CompNumber4').is(':checked') == true) || ($('#CompNumber5').is(':checked') == true) || ($('#CompNumber6').is(':checked') == true) || ($('#CompNumber7').is(':checked') == true)) && (!(($('#CompNumber8').is(':checked') == true) || ($('#CompNumber9').is(':checked') == true) || ($('#CompNumber10').is(':checked') == true) || ($('#CompNumber11').is(':checked') == true)))) {
                    $('#CompNumber1').prop('disabled', true);
                    $('#CompNumber2').prop('disabled', true);
                    $('#CompNumber3').prop('disabled', false);
                    $('#CompNumber5').prop('disabled', false);
                    $('#CompNumber6').prop('disabled', false);
                    $('#CompNumber4').prop('disabled', false);
                    $('#CompNumber11').prop('disabled', false);
                    $('#CompNumber7').prop('disabled', false);
                    $('#CompNumber10').prop('disabled', false);
                    $('#CompNumber9').prop('disabled', false);
                    $('#CompNumber8').prop('disabled', false);
                    $('#CompNumber12').prop('disabled', false);
                    $('#CompNumber14').prop('disabled', true);
                    $('#CompNumber15').prop('disabled', true);
                    console.log('checked13');
                }
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber14').change(function () {
            if ($('#CompNumber14').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', true);
                $('#CompNumber9').prop('disabled', true);
                $('#CompNumber10').prop('disabled', true);
                $('#CompNumber11').prop('disabled', true);
                $('#CompNumber12').prop('disabled', true);
                $('#CompNumber13').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                $('#CompNumber15').prop('disabled', true);
                console.log('checked14');
            }
            else {
                console.log('unchecked14');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', true);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
                $('#CompNumber15').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });
        $('#CompNumber15').change(function () {
            if ($('#CompNumber15').is(':checked') == true) {
                $('#CompNumber1').prop('disabled', true);
                $('#CompNumber3').prop('disabled', true);
                $('#CompNumber4').prop('disabled', true);
                $('#CompNumber5').prop('disabled', true);
                $('#CompNumber6').prop('disabled', true);
                $('#CompNumber7').prop('disabled', true);
                $('#CompNumber8').prop('disabled', true);
                $('#CompNumber9').prop('disabled', true);
                $('#CompNumber10').prop('disabled', true);
                $('#CompNumber11').prop('disabled', true);
                $('#CompNumber12').prop('disabled', true);
                $('#CompNumber13').prop('disabled', true);
                $('#CompNumber14').prop('disabled', true);
                $('#CompNumber2').prop('disabled', true);
                console.log('checked15');
            }
            else {
                console.log('unchecked15');
                $('#CompNumber1').prop('disabled', false);
                $('#CompNumber3').prop('disabled', false);
                $('#CompNumber4').prop('disabled', false);
                $('#CompNumber5').prop('disabled', false);
                $('#CompNumber6').prop('disabled', false);
                $('#CompNumber7').prop('disabled', false);
                $('#CompNumber8').prop('disabled', false);
                $('#CompNumber9').prop('disabled', false);
                $('#CompNumber10').prop('disabled', false);
                $('#CompNumber11').prop('disabled', false);
                $('#CompNumber12').prop('disabled', false);
                $('#CompNumber13').prop('disabled', false);
                $('#CompNumber14').prop('disabled', false);
                $('#CompNumber2').prop('disabled', false);
            }
            $("input[name^='CompNumberList']").each(function () {
                if ($(this).is(':checked') == true) {
                    $(this).prop('disabled', false);
                }
            });
        });


        $("#Photo").val("@Model.Photo");

        $("#ChildCount").val("@Model.ChildCount");
        $("#Child2006").val("@Model.Child2006");
           var gardenacre = "@Model.GardeningEcre";
        if (GardeningEcre != "") {
            $('#GardeningEcre option').map(function () {
                if ($(this).text() == gardenacre) return this;
            }).attr('selected', 'selected');
        }

        var CuminEcre = "@Model.CuminEcre";
        if (CuminEcre != "") {
            $('#CuminEcre option').map(function () {
                if ($(this).text() == CuminEcre) return this;
            }).attr('selected', 'selected');
        }

        var WaterSource = "@Model.WaterSource";
        if (WaterSource != "") {
            $('#WaterSource option').map(function () {
                if ($(this).val() == WaterSource) return this;
            }).attr('selected', 'selected');
        }

        var TypeExistingCastle = "@Model.TypeExistingCastle";
        if (TypeExistingCastle != "") {
            $('#TypeExistingCastle option').map(function () {
                if ($(this).val() == TypeExistingCastle) return this;
            }).attr('selected', 'selected');        }

        var gender = "@Model.Gender";
        if (gender != "") {
         $("input:radio[name='gender'][value='@Model.Gender']").prop('checked', true);
        }

        var ApplicantCrippled = "@Model.ApplicantCrippled";
        if (ApplicantCrippled != "") {
            $("input:radio[name='ApplicantCrippled'][value='@Model.ApplicantCrippled']").prop('checked', true);
        }

        var PresentDaySheep = "@Model.PresentDaySheep";
        if (PresentDaySheep != "") {
            $("input:radio[name='PresentDaySheep'][value='@Model.PresentDaySheep']").prop('checked', true);
        }

        var ApplicantsPermanentInOnePlace = "@Model.ApplicantsPermanentInOnePlace";
        if (ApplicantsPermanentInOnePlace != "") {
            $("input:radio[name='ApplicantsPermanentInOnePlace'][value='@Model.ApplicantsPermanentInOnePlace']").prop('checked', true);
        }

        var ApplicantsMigratedByWayOfTransit = "@Model.ApplicantsMigratedByWayOfTransit";
        if (ApplicantsMigratedByWayOfTransit != "") {
            $("input:radio[name='ApplicantsMigratedByWayOfTransit'][value='@Model.ApplicantsMigratedByWayOfTransit']").prop('checked', true);
        }

        var IsApplicantOwnedLand = "@Model.IsApplicantOwnedLand";
        if (IsApplicantOwnedLand != "") {
            $("input:radio[name='IsApplicantOwnedLand'][value='@Model.IsApplicantOwnedLand']").prop('checked', true);

        }
        var IsNotIsAvailableOnLease = "@Model.IsNotIsAvailableOnLease";
       if (IsNotIsAvailableOnLease != "") {
                $("input:radio[name='IsNotIsAvailableOnLease'][value='@Model.IsNotIsAvailableOnLease']").prop('checked', true);
            }

            var IsWarehouseForSheep = "@Model.IsWarehouseForSheep";
        if (IsWarehouseForSheep != "") {
            $("input:radio[name='IsWarehouseForSheep'][value='@Model.IsWarehouseForSheep']").prop('checked', true);
        }

        var IsNotIsAtLeastOnePinpointSpace = "@Model.IsNotIsAtLeastOnePinpointSpace";
        if (IsNotIsAtLeastOnePinpointSpace != "") {
            $("input:radio[name='IsNotIsAtLeastOnePinpointSpace'][value='@Model.IsNotIsAtLeastOnePinpointSpace']").prop('checked', true);
        }

        var IsSavingsGroupMember = "@Model.IsSavingsGroupMember";
        if (IsSavingsGroupMember != "") {
            $("input:radio[name='IsSavingsGroupMember'][value='@Model.IsSavingsGroupMember']").prop('checked', true);
        }

        var IsanimalHusbandryManufacturingCompanyMember = "@Model.IsanimalHusbandryManufacturingCompanyMember";
        if (IsanimalHusbandryManufacturingCompanyMember != "") {
            $("input:radio[name='IsanimalHusbandryManufacturingCompanyMember'][value='@Model.IsanimalHusbandryManufacturingCompanyMember']").prop('checked', true);
        }

        var IsTrained = "@Model.IsTrained";
        if (IsTrained != "") {
            $("input:radio[name='IsTrained'][value='@Model.IsTrained']").prop('checked', true);
        }

       
        var comps = '@Model.CompNumber';
        var split_str = comps.split(", ");
        for (var i = 0; i < split_str.length; i++) {
            var _name = "#CompNumber" + split_str[i].substring(0,2);
           // alert(_name);
             $(""+_name+"").prop('checked', true);
        }



        $(document).on('change', '.btn-file :file', function () {
            var input = $(this),
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [label]);
        });

        $('.btn-file :file').on('fileselect', function (event, label) {

            var input = $(this).parents('.input-group').find(':text'),
                log = label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }

        });
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#img-upload').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });

        (function ($) {
            $.fn.checkFileType = function (options) {
                var defaults = {
                    allowedExtensions: [],
                    success: function () { },
                    error: function () { }
                };
                options = $.extend(defaults, options);

                return this.each(function () {

                    $(this).on('change', function () {
                        var value = $(this).val(),
                            file = value.toLowerCase(),
                            extension = file.substring(file.lastIndexOf('.') + 1);

                        if ($.inArray(extension, options.allowedExtensions) == -1) {
                            options.error();
                            $(this).focus();
                        } else {
                            options.success();

                        }

                    });

                });
            };

        })(jQuery);


        $('#imgInp').checkFileType({
            allowedExtensions: ['jpg', 'jpeg', 'png'],
            success: function () {
                //alert('Success');
            },
            error: function () {
                alert('Please upload valid image format only.');
            }
        });

        });


    function checkCripple() {
        if (document.getElementById('ApplicantCrippled1').checked) {
            document.getElementById('divCripple').style.display = 'block';
        }
        else document.getElementById('divCripple').style.display = 'none';
    }

    function checkSheep() {
        if (document.getElementById('PresentDaySheep1').checked) {
            document.getElementById('divSheep').style.display = 'block';
        }
        else document.getElementById('divSheep').style.display = 'none';
    }

    function checkLandOwned() {
        if (document.getElementById('IsApplicantOwnedLand1').checked) {
            document.getElementById('divLandOwned').style.display = 'block';
        }
        else {
            document.getElementById('divLandOwned').style.display = 'none';
            document.getElementById('divLease').style.display = 'block';

        }
    }

    function checkLandLeased() {
        if (document.getElementById('IsNotIsAvailableOnLease1').checked) {
            document.getElementById('divLandLeased').style.display = 'block';
        }
        else document.getElementById('divLandLeased').style.display = 'none';
    }

    function checkWarehouse() {
        if (document.getElementById('IsWarehouseForSheep1').checked) {
            document.getElementById('divWarehouse').style.display = 'block';
        }
        else {
            document.getElementById('divWarehouse').style.display = 'none';
            document.getElementById('divSpace').style.display = 'block';
        }
        }

        function checkCompany() {
            if (document.getElementById('IsanimalHusbandryManufacturingCompanyMember1').checked) {
                document.getElementById('divCompany').style.display = 'block';
            }
            else {
                document.getElementById('divCompany').style.display = 'none';
            }
        }

        function checkSavings() {
            if (document.getElementById('IsSavingsGroupMember1').checked) {
                document.getElementById('divSavings').style.display = 'block';
            }
            else {
                document.getElementById('divSavings').style.display = 'none';
            }
        }
</script>

